    {{> navBar profilePic = profilePic isAuth = true}}
    <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'>
    <style>
    @media screen and (max-width: 991px)  {
    .navbar__  {
        display:none;
    }
    .navbar_mobile {
        display: none;
        
    }
    body {
        padding-bottom: 0;
    }
 
    #chat{
        color:#000;
    }
    .chats{
        color: #000;
        max-height: 90vh;
    }
    #back{
        display: block !important;
    }
    .non-chat-c{
        display: none;
    }
}

    #sc{

        visibility: hidden;
        text-align: start;
        padding: 0.7rem 1rem;
        border:1px solid #DBE0E4;
        border-radius: 1em;
        background-color: white;
        
    }
    #s-user:focus + #sc, #sc:focus + #sc{

        visibility: visible;
    }
    .search-sug{
        text-align: start;
        width: 100%;
        cursor: pointer;
        padding: 0.2em 0;
        font-weight: 450;
        transition:all 200ms;
        background:none;
        border:none;
    }
    .search-sug:hover{
        color:rgb(26, 243, 30)
    }
    </style>
    <div style="display:none;
        position:fixed;
        right:0;
        margin-top:0.5em;
        margin-right:0.5em;
        font-size: 1.3em; 
        width:2em; height:2em; 
        border-radius: 50%;
        z-index: 1;
        background-color: white;
        text-align: center;
        line-height: 1.9em;" id="back">
    <i class="fa fa-bars"></i></div>
    <div class="container p-0">
    <div class="card">
        <div class="row g-0">
        <div class="col-12 col-lg-5 col-xl-3 border-right bg-white non-chat-c" style="border-bottom: 1px solid rgb(224, 224, 224);border-right: 1px solid rgb(224, 224, 224)">
            <div class="top-chat">
                <div class="d-flex flex-column gap-2 py-3 ps-4 pe-5 w-100">
                
                        <h1 class="m-0">Messages</h1>
                    <div class=" d-flex flex-column gap-2 py-2 ps-2 w-100">
                        <input type="text" name="s-user" id="s-user" placeholder="Search user..." class="form-control my-3" style="border-radius: 50px;">
                        <div id="sc" style="position: absolute;margin-top: 3.5em;z-index: 1;"></div>    
                    </div>
                </div>
            </div>
            <div id="user-chat-c">
                <div class="user-chat">No Users</div>
            </div>
        </div>
        <div class="col-12 col-lg-7 col-xl-9">
            <div id="chat-messages">
                <div class="user-top-chat" style=" border-bottom: 1px solid rgb(224, 224, 224); border-top: 1px solid rgb(224, 224, 224);" onclick="">
                    <div class="d-flex">
                    </div>
                    <img class="chat-pfp"
                        src="https://media.istockphoto.com/vectors/anonymity-concept-icon-in-neon-line-style-vector-id1259924572?k=20&m=1259924572&s=612x612&w=0&h=Xeii8p8hOLrH84PO4LJgse5VT7YSdkQY_LeZOjy-QD4="
                        alt="" srcset="">
                    <div class="chat-user-details"
                        style="justify-content: center;font-size:1.2em;flex-direction: column;gap:0;">
                        <div class="chat-name">No Users</div>
                        <div class="chat-date" style="margin-top:-0.8em">16:20</div>
                    </div>
                </div>
                <div class="chats">
                </div>
                <div class="flex-grow-0 py-3 px-4 border-top" style="">
                    <div class="inp-f">
                        <input type="text" placeholder="Write a message..." name="msg" id="chat-msg">
                        <button class="sub-chat">Send</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
    </div>

    <noscript id="data" user="" pfp=""></noscript>
    <noscript id="vars" user="{{userName}}" pfp="{{profilePic}}"></noscript>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        let vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', `${vh}px`);
    $('#back').click(e=>{
        $('#chat-messages').attr('style','display:none')
        $('#back').attr('style','display:none;visibility:hidden;height:0')
        $('.non-chat-c').attr('style','display:block')
    })
    newPageTitle = 'Messages  | Otnem - Share your project with the world';
    document.querySelector('title').textContent = newPageTitle;
    const socket = io()
    $('#chat-msg').focus()
    main()
    function showSearch(arr){
        $('#sc').html('')
        arr = arr.slice(0,5)
        arr = arr.map(element=>{
            let button = document.createElement('button')
            button.classList.add('search-sug')
            button.innerText = element
            button.addEventListener('click',()=>{
                $('#data').attr('user', element)
                socket.emit('joinRoom', element)
                $('#user-chat-c').prepend($(`.${$('#data').attr('user').replaceAll(' ','-')}`))
                location.reload()
            })
            return button
        })
        document.querySelector('#sc').append(...arr)
    }
    async function main() {
        let chats = await axios.get('/chatMem')
        let allUsers = (await axios.get('/getAllUsers')).data.filter(e=>e != $('#vars').attr('user'))
        $('#s-user').keyup(async e => {
            if(e.keyCode == 13 && (await axios.get(`/checkUser?user=${$('#s-user').val()}`)).data) {
                    $('#data').attr('user', $('#s-user').val())
                    socket.emit('joinRoom', $('#s-user').val())
                    $('#user-chat-c').prepend($(`.${$('#data').attr('user').replaceAll(' ','-')}`))
                    location.reload()
            }
            if($('#s-user').val().replaceAll(' ','') != '')
                showSearch((allUsers.filter(element=>element.toLowerCase().replaceAll(' ','').includes($('#s-user').val().toLowerCase().replaceAll(' ','')))))
            else
                $('#sc').html('')
        })
        if (chats.data.chats[0])
            return sumMain(chats)
        socket.on('notif', (res) => {
            location.reload()
        })
    }
    async function sumMain(chats) {
        let allUsers = (await axios.get('/getAllUsers')).data.filter(e=>e != $('#vars').attr('user'))
        let userr = (getUrlVars())['user']
        if(userr)
        userr = userr.replaceAll('%',' ')
        if(getUrlVars() && getUrlVars()['redirect'] && !chats.data.chats.some(e=>e['users'] == userr && userr != $('#vars').attr('user'))){
            let userData = await axios.post(`/getUser?user=${userr}`)
            userData = userData.data
            if(typeof userData == 'object'){
                $('#user-chat-c').html('')
                $('#data').attr('user',`${userr}`)
                $('#data').attr('pfp',`${userData.profilePic}`)
                let chat = {"users":`${userr}`,'userData':userData}
                chat['time'] = new Date()
                socket.emit('joinRoom', userr)
                await addUser(chat)
                $('.user-top-chat').click(e => { location.href = `/profile?user=${$('#data').attr('user')}` })
                $('.chat-user-details .chat-name').text(`${chat.users}`)
                $('.user-top-chat .chat-pfp').attr('src', `${chat.userData.profilePic}`)
                $('#user-chat-c').prepend($(`.${$('#data').attr('user').replaceAll(' ','-')}`))
            }
            else{
                socket.emit('joinRoom', chats.data.chats[0].users)
                $('.user-top-chat').click(e => { location.href = `/profile?user=${$('#data').attr('user')}` })
                $('#data').attr('user', `${chats.data.chats[0].users}`)
                $('#data').attr('pfp', `${chats.data.chats[0].userData.profilePic}`)
                $('.chat-user-details .chat-name').text(`${chats.data.chats[0].users}`)
                $('.user-top-chat .chat-pfp').attr('src', `${chats.data.chats[0].userData.profilePic}`)
                $('#user-chat-c').html('')
            }
        }
        else if(chats.data.chats.some(e=>e['users'] == userr) && userr != $('#vars').attr('user')){
            $('#user-chat-c').html('')
            let userData = await axios.post(`/getUser?user=${userr}`)
            userData = userData.data
            $('#data').attr('user',`${userr}`)
            $('#data').attr('pfp',`${userData.profilePic}`)
            socket.emit('joinRoom', userr)
            $('.user-top-chat').click(e => { location.href = `/profile?user=${$('#data').attr('user')}` })
            $('.chat-user-details .chat-name').text(`${userr}`)
            $('.user-top-chat .chat-pfp').attr('src', `${userData.profilePic}`)
        }
        else{
            socket.emit('joinRoom', chats.data.chats[0].users)
            $('.user-top-chat').click(e => { location.href = `/profile?user=${$('#data').attr('user')}` })
            $('#data').attr('user', `${chats.data.chats[0].users}`)
            $('#data').attr('pfp', `${chats.data.chats[0].userData.profilePic}`)
            $('.chat-user-details .chat-name').text(`${chats.data.chats[0].users}`)
            $('.user-top-chat .chat-pfp').attr('src', `${chats.data.chats[0].userData.profilePic}`)
            $('#user-chat-c').html('')
        }
        window.history.pushState({}, document.title, `${((window.location.pathname).split('?')[0])}?user=${$('#data').attr('user')}`)
        await showChat($('#data').attr('user'))
        chats.data.chats.forEach(async chat => {
            await addUser(chat)
        })
        $(`.${($('#data').attr('user')).replaceAll(' ','-')}-unread`).text('0')
        $(`.${($('#data').attr('user')).replaceAll(' ','-')}-unread`).css('display','none')
        socket.on('notif', async(res) => {
            let userClass = res.userName.replaceAll(' ','-')
            if (!document.querySelector(`.${userClass}`)) {
                let userData = await axios.post(`/getUser?user=${res.userName}`)
                userData = userData.data
                userData['time'] = new Date()
                let chat = {"users":res.userName,"userData":userData}
                addUser(chat)
                if(res.userName != $('#data').attr('user')){
                    $(`.${userClass}-unread`).css('display', 'block')
                    let unReadNum = $(`.${userClass}-unread`).text()
                    $(`.${userClass}-unread`).text(`${Number($(`.${userClass}-unread`).text()) + 1}`)
                }
            }
            else if(document.querySelector(`.${userClass}`) != null){
                if(res.userName != $('#data').attr('user')){
                    $(`.${userClass}-unread`).text(Number($(`.${userClass}-unread`).text())+1)
                    $(`.${userClass}-unread`).css('display',"block")
                }
            }
            $('#user-chat-c').prepend($(`.${userClass}`))
        })
        socket.on('message', async(res) => {
            addMsg(res.msg, res.userName, res.time)
        })
        $('.sub-chat').click(async e => {
            if ($('#chat-msg').val() != '') {
                socket.emit('chatMsg', $('#data').attr('user'), $('#chat-msg').val())
                $('#chat-msg').val('')
                $('#chat-msg').focus()
            }
        })
        $('#chat-msg').keyup(async e => {
            if (e.keyCode == 13 && $('#chat-msg').val() != '') {
                socket.emit('chatMsg', $('#data').attr('user'), $('#chat-msg').val())
                $('#chat-msg').val('')
                $('#user-chat-c').prepend($(`.${$('#data').attr('user').replaceAll(' ','-')}`))
            }
        })
        $('#s-user').keyup(async e => {
            if (e.keyCode == 13 && (await axios.get(`/checkUser?user=${$('#s-user').val()}`)).data) {
                    $('#data').attr('user', $('#s-user').val())
                    socket.emit('joinRoom', $('#s-user').val())
                    $('#user-chat-c').prepend($(`.${$('#data').attr('user').replaceAll(' ','-')}`))
                    location.reload()
            }
            if($('#s-user').val().replaceAll(' ','') != '')
                showSearch((allUsers.filter(element=>element.toLowerCase().replaceAll(' ','').includes($('#s-user').val().toLowerCase().replaceAll(' ','')))))
            else
                $('#sc').html('')
        })
        $(`${chats.data.chats[0].users}-unread`).css('display', 'none')
        $(`${chats.data.chats[0].users}-unread`).text('0')
    }
    async function addUser(chat) {
        let userData = chat.userData
        let pfp = document.createElement('img')
        pfp.src = userData.profilePic
        pfp.classList.add('chat-pfp', `${chat.users.replaceAll(' ','-')}-pfp`)
        let user = document.createElement('div')
        user.innerText = chat.users
        user.classList.add('chat-name')
        let typ = document.createElement('div')
        typ.classList.add('chat-typ')
        let nameC = document.createElement('div')
        nameC.classList.add('name-c')
        nameC.append(user, typ)
        let date = document.createElement('div')
        date.innerText = `${new Date(chat.time).getDate()}/${new Date(chat.time).getMonth() + 1}/${new Date(chat.time).getFullYear()}`
        date.classList.add('chat-date')
        let unRead = document.createElement('div')
        unRead.innerText = chat.unread
        if (chat.unread == 0)
            unRead.style = 'display:none'
        unRead.classList.add('chat-unread', `${chat.users.replaceAll(' ','-')}-unread`)
        let endchat = document.createElement('div')
        endchat.classList.add('end-chat')
        endchat.append(date, unRead)
        let userC = document.createElement('div')
        userC.classList.add('user-chat')
        userC.append(pfp, nameC, endchat)
        userC.classList.add(chat.users.replaceAll(' ','-'))
        userC.addEventListener('click', async e => {
            socket.emit('joinRoom', chat.users)
            $('#data').attr('user', chat.users)
            $('#data').attr('pfp', `${userData.profilePic}`)
            $('.user-top-chat .chat-pfp').attr('src', `${chat.userData.profilePic}`)
            $('.chat-user-details .chat-name').text(`${chat.users}`)
            unRead.style = 'display:none'
            unRead.innerText = '0'
            await showChat(chat.users)
            if(screen.width < 991){
                    $('#chat-messages').attr('style','')
                    $('#back').attr('style',`display:none;
                                            position:fixed;
                                            right:0;
                                            margin-top:0.5em;
                                            margin-right:0.5em;
                                            font-size: 1.3em; 
                                            width:2em; height:2em; 
                                            border-radius: 50%;
                                            z-index: 1;
                                            background-color: white;
                                            text-align: center;
                                            line-height: 1.9em;`)
                    $('.non-chat-c').attr('style','')
            }
        })
            document.querySelector('#user-chat-c').append(userC)
            $('#user-chat-c').prepend($(`.${$('#data').attr('user').replaceAll(' ','-')}`))
    }
    async function showChat(user) {
        let { data } = await axios.get(`/chats?user=${$('#data').attr('user')}`)
        $('.chats').html('')
        if(!data.chats){
            addMsg("User Doesnt exist", "GOD", new Date())
        }
        if (data.chats) {
            data.chats.forEach(chat => {
                addMsg(chat.msg, chat.user, chat.time)
            })
            let chat = data.chats[data.chats.length - 1]
            if (chat) {
                $('.chat-user-details .chat-date').text(`${new Date(chat.time).getHours()}:${(new Date(chat.time).getMinutes() < 10) ? '0' : ''}${new Date(chat.time).getMinutes()}`)
                $('#chat-msg').focus()
            }
        }
    }
    function addMsg(msg, user, time) {
        let pfp
        let isMine
        if (user == $('#data').attr('user')) {
            pfp = ($('#data').attr('pfp') !=  undefined)?$('#data').attr('pfp'):"https://media.istockphoto.com/vectors/anonymity-concept-icon-in-neon-line-style-vector-id1259924572?k=20&m=1259924572&s=612x612&w=0&h=Xeii8p8hOLrH84PO4LJgse5VT7YSdkQY_LeZOjy-QD4="
            isMine = false
        }
        else if (user == $('#vars').attr('user')) {
            pfp = ($('#vars').attr('pfp') !=  undefined)?$('#vars').attr('pfp'):"https://media.istockphoto.com/vectors/anonymity-concept-icon-in-neon-line-style-vector-id1259924572?k=20&m=1259924572&s=612x612&w=0&h=Xeii8p8hOLrH84PO4LJgse5VT7YSdkQY_LeZOjy-QD4="
            user = "You"
            isMine = true
        }
        else{
            pfp = ($('#data').attr('pfp') !=  undefined)?$('#data').attr('pfp'):"https://media.istockphoto.com/vectors/anonymity-concept-icon-in-neon-line-style-vector-id1259924572?k=20&m=1259924572&s=612x612&w=0&h=Xeii8p8hOLrH84PO4LJgse5VT7YSdkQY_LeZOjy-QD4="
        }
        
        let profilePic = document.createElement('img')
        profilePic.src = pfp
        profilePic.classList.add('chat-pfp', 'chats-pfp')
        if (isMine)
            profilePic.setAttribute('onclick', 'location.href = "/profile"')
        else
            profilePic.setAttribute('onclick', `location.href = "/profile?user=${user}"`)
        let name = document.createElement('div')
        name.classList.add('chat-name')
        name.innerText = user
        if (isMine)
            name.setAttribute('onclick', 'location.href = "/profile"')
        else
            name.setAttribute('onclick', `location.href = "/profile?user=${user}"`)
        let timeDiv = document.createElement('div')
        timeDiv.classList.add('chat-date')
        timeDiv.innerText = `${new Date(time).getHours()}:${(new Date(time).getMinutes() < 10) ? '0' : ''}${new Date(time).getMinutes()}`
        let top = document.createElement('div')
        top.classList.add('chat-user-details')
        if (isMine)
            top.append(timeDiv, name)
        else
            top.append(name, timeDiv)
        let chatMsg = document.createElement('div')
        chatMsg.innerText = msg
        chatMsg.classList.add('chat-msg', (isMine) ? "mine" : "not-mine")
        let rest = document.createElement('div')
        rest.classList.add('rest', (isMine) ? 'mine-r' : 'not-mine-r')
        rest.append(top, chatMsg)
        let chatHolder = document.createElement('div')
        chatHolder.classList.add('chat-h')
        if (isMine) {
            chatHolder.append(rest, profilePic)
            chatHolder.classList.add('mine-h')
        }
        else {
            chatHolder.classList.add('not-mine-h')
            chatHolder.append(profilePic, rest)
        }
        document.querySelector('.chats').append(chatHolder)
        let objDiv = document.querySelector(".chats")
        objDiv.scrollTop = objDiv.scrollHeight
    }
    function getUrlVars(){
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for(var i = 0; i < hashes.length; i++)
        {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }
    </script>